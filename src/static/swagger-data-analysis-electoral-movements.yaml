swagger: "2.0"
info:
  description: "This API contains election data and movements such as the real time position of candidates, where they are meeting, voting trends, popularity of candidates on social networks and media in order to predict the political actions of other parties and carry out a successful political campaign."
  version: "1.0.0"
  title: "Data analysis and electoral movements"
  contact:
    email: "samtoche@outlook.fr"
host: "data-analysis-electoral-movements.sourcing.com"
basePath: "/v1.0.0"
tags:
- name: "movements_candidats"
  description: "This dataset contains the data sources that will be used to get information about the movements of the other candidates such as their position, events, meetings and actions in real time"
- name: "tendancy_votes"
  description: "This dataset contains the daily voting trend"
- name: "popularity_candidats"
  description: "This dataset contains the popularity of candidates in the media and on social networks"
schemes:
- "https"
- "http"
paths:
  /movements_candidats/position:
    get:
      tags:
      - "movements_candidats"
      summary: "Returns a Map with the position of all the candidat"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "successfull operation"
      security:
      - meet_electoral_auth:
        - "write:candidats"
        - "read:candidats"
    
  /movements_candidats/events:
    get:
      tags:
      - "movements_candidats"
      summary: "Returns a events organized by the candidat"
      description: ""
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "successfull operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Candidat"
        "400":
          description: "Invalid status value"
      security:
      - meet_electoral_auth:
        - "write:candidats"
        - "read:candidats"
  /movements_candidats/meeting:
    get:
      tags:
      - "movements_candidats"
      summary: "Returns a meeting organized by the candidat or the media (presse's conference)"
      description: ""
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      responses:
        "200":
          description: "successfull operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Candidat"
        "400":
          description: "Invalid tag value"
      security:
      - meet_electoral_auth:
        - "write:candidats"
        - "read:candidats"
      deprecated: false

  /tendancy_votes:
    get:
      tags:
      - "tendancy_votes"
      summary: "Returns vote inventories for each candidat in map or in percentage of population"
      description: "Returns a map of status votes trend"
      operationId: "getInventory"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successfull operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
      security:
      - api_key: []
  
  /popularity_candidats/on_media:
    get:
      tags:
      - "popularity_candidats"
      summary: "Returns the media and the occurence of candidat on media/newspapers/TV. Returns also the favourite candidat for each TV channel"
      description: "List of TV, media and newspapers with their favourite candidat. Circular diagram of each channel, media and newspapers with all the candidat (graphics reprsentaion)."
      operationId: "Map"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/Candidat"
      responses:
        default:
          description: "successfull operation"
  
  /popularity_candidats/on_social_network:
    get:
      tags:
      - "popularity_candidats"
      summary: "Returns the numbers of tweets/posts per day of a candidat on social network. Returns also the favourite candidat on this network and the followers'numbers"
      description: "graphics reprsentaion in circular diagram"
      operationId: "createUsersWithListInput"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          type: "array"
          items:
            $ref: "#/definitions/Candidat"
      responses:
        default:
          description: "successfull operation"

securityDefinitions:
  meet_electoral_auth:
    type: "oauth2"
    authorizationUrl: "https://data-analysis-electoral-movements.sourcing.com"
    flow: "implicit"
    scopes:
      write:candidats: "modify our candidat's data in your account"
      read:candidats: "read the other candidats"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
    
    
definitions:
  Candidat:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "integer"
        description: "name of candidat"
      position:
        type: "object"
        description: "position of candidat"
      popular:
        type: "string"
        description: "Popularity of candidat"
        enum:
        - "popular on media"
        - "popular on social network"
        - "unknown"
      vote_number:
        type: "integer"
        format: "int64"
      isWinnerAtNow:
        type: "boolean"
        default: false
    xml:
      name: "Candidat"
      
  Meeting_events:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      DateMeeting_event:
        type: "string"
        format: "date-time"
      place:
        type: "object"
        description: "place of meeting"
      type_M_or_E:
        type: "string"
        description: "Meeting or events"
        enum:
        - "Meeting"
        - "Events"
     
    xml:
      name: "Meeting_events"
 
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      a_type:
        type: "string"
        description: "Description of type'API Response"
      message:
        type: "string"
        description: "Message of API Response"
